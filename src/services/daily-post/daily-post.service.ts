import { Service, Container } from 'typedi';
import { ApifyCovidService } from '../third-party/apify-covid/apify-covide.service';
import { CbrService } from '../third-party/cbr/cbr.service';
import { CoinmarketcapService } from '../third-party/coinmarketcap/coinmarketcap.service';
import { GiphyService } from '../third-party/giphy/giphy.service';
import { OpenweathermapService } from '../third-party/openweathermap/openweathermap.service';
import {} from '../third-party/apify-covid/interfaces/covid.interface';
import { IExchangeRates } from '../third-party/cbr/interfaces/currency.interface';
import {} from '../third-party/coinmarketcap/interfaces/cryptocurrency.interface';
import {} from '../third-party/giphy/interfaces/respopnse.interfaces';
import {} from '../third-party/openweathermap/interfaces/weather.interface';
import {} from '../third-party/rbk-rss/'

@Service()
export class DailyPostService {
    /**
     * Covid monitoring service
     */
    private readonly apifyCovidService: ApifyCovidService;
    /**
     * Currency rates from Cental bank of Russia service
     */
    private readonly cbrService: CbrService;
    /**
     * Cryptocurrency rate's service
     */
    private readonly coinmarketcapService: CoinmarketcapService;
    /**
     * Gif files service
     */
    private readonly giphyService: GiphyService;
    /**
     * Weather service
     */
    private readonly openweathermapService: OpenweathermapService;

    constructor() {
        /** Init services */
        this.apifyCovidService = Container.get(ApifyCovidService);
        this.cbrService = Container.get(CbrService);
        this.coinmarketcapService = Container.get(CoinmarketcapService);
        this.giphyService = Container.get(GiphyService);
        this.openweathermapService = Container.get(OpenweathermapService);
    }

    /**
     * Generate complete daily post with different informations
     * @returns information post in string
     */
    public async generateDailyPost(): string {
        /**
         * Preparing a block of exchange rates
         */
        let currencyRaw: IExchangeRates = undefined;
        currencyRaw = await this.cbrService.getDayChangesRate();

        let currency: string = undefined;
        if (currencyRaw) {
            currency = this.decorateCurencyExchangeRate(currencyRaw);
        }

        /**
         * Preparing a block of yesterday news
         */
        let newsRaw = undefined;
        newsRaw = await this.


        /** Combine information blocks into one */
        let dailyPost: string = undefined;
        dailyPost.concat(currency, );

        return dailyPost;
    }

    private decorateCurencyExchangeRate(exchangeRates: IExchangeRates): string {

        return `
            üíµ USD: 74.57 (+0.04) –ø–∞–¥–∞–µ—Ç –±–ª—è—Ç—å
            üí∂ EUR: 92.30 (-0.70) —Ä–∞—Å—Ç–µ—Ç —Å—É–∫–∞
        `;
    }

    private decorateYesterdayMainNews(): string {
        return `
            üì∞ –í–∞–∂–Ω–æ–µ –∑–∞ –≤—á–µ—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å:
            - –í –ú–ò–î–µ –ø–æ–æ–±–µ—â–∞–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–∞–Ω–∫—Ü–∏–∏ –ï–° –ø–æ –¥–µ–ª—É –ù–∞–≤–∞–ª—å–Ω–æ–≥–æ
            - –í–æ–ª–æ–Ω—Ç–µ—Ä —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∞ –æ –±–æ–ª–µ–∑–Ω–∏ —ç–∫—Å-—É—á–∞—Å—Ç–Ω–∏—Ü—ã Little Big
            - –§–∏–Ω–ª—è–Ω–¥–∏—è –≤–≤–µ–ª–∞ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏–∑-–∑–∞ —Ä–æ—Å—Ç–∞ –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏ COVID
        `;
    }
    private decorateCryptocurrencyExcahangeRates(): string {
        return `
            üí≥ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞:
            BTC: 5000 —Ä—É–± (+200$) –ø–∞–¥–∞–µ—Ç –±–ª—è—Ç—å
            ETH: 4000 —Ä—É–± (-10$) —Ä–∞—Å—Ç–µ—Ç —Å—É–∫–∞
        `;
    }

    private decorateCovidStatistics(): string {
        return `
            –ö–æ—Ä–æ–Ω–æ–≤–∏—Ä—É—Å:
            ü§¢ 134 000 —á–µ–ª (+900)
            ‚ö∞Ô∏è 27 000 —á–µ–ª (+17)
        `;
    }

    private decorateWeather(): string{
        return `
            –ü–æ–≥–æ–¥–∞:
            üå§ –ú–°–ö -4, –ø–æ—Ä—è–¥–æ—á–Ω–æ
            üå® –ù–°–ö - 17, —Ö–æ–ª–æ–¥–Ω–æ –±–ª—è—Ç—å
        `;
    }

}